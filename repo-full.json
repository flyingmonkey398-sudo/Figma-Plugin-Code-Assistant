{
  "name": "Figma-Plugin-Code-Assistant",
  "type": "folder",
  "children": [
    {
      "name": ".DS_Store",
      "type": "file",
      "content": null
    },
    {
      "name": ".gitignore",
      "type": "file",
      "content": null
    },
    {
      "name": "README.md",
      "type": "file",
      "content": "1) npm i\n2) npm run build   # emits code.js\n3) Figma → Plugins → Development → New Plugin… → \"Link existing manifest.json\"\n4) Open any file, select frames (optional), run the plugin.\n5) It will auto-scan selection (or page), show JSON, and let you Copy.\n"
    },
    {
      "name": "data",
      "type": "folder",
      "children": [
        {
          "name": "screens.json",
          "type": "file",
          "content": "{\n  \"name\": \"Design Scanner + LLM\",\n  \"id\": \"com.yourname.designscanner\",\n  \"api\": \"1.0.0\",\n  \"main\": \"dist/code.js\",\n  \"ui\": \"dist/ui.html\",\n  \"editorType\": [\"figma\"],\n  \"networkAccess\": {\n    \"allowedDomains\": [\"none\"],\n    \"devAllowedDomains\": [\"http://localhost:8787\"],\n    \"reasoning\": \"Use a local CORS proxy during development to reach a local LLM (LM Studio).\"\n  }\n}\n"
        },
        {
          "name": "tokens.json",
          "type": "file",
          "content": "{\n  \"name\": \"Design Scanner + LLM\",\n  \"id\": \"com.yourname.designscanner\",\n  \"api\": \"1.0.0\",\n  \"main\": \"dist/code.js\",\n  \"ui\": \"dist/ui.html\",\n  \"editorType\": [\"figma\"],\n  \"networkAccess\": {\n    \"allowedDomains\": [\"none\"],\n    \"devAllowedDomains\": [\"http://localhost:8787\"],\n    \"reasoning\": \"Use a local CORS proxy during development to reach a local LLM (LM Studio).\"\n  }\n}\n"
        }
      ]
    },
    {
      "name": "index.mjs",
      "type": "file",
      "content": "// index.mjs — Minimal MCP client for Figma Desktop (Node ≥18)\n// No deps. Works with “session-required” and “auto-init” builds.\n\nconst BASE = process.env.FIGMA_MCP_URL || \"http://127.0.0.1:3845/mcp\";\n\nconst headersJSON = {\n    \"Accept\": \"application/json, text/event-stream\",\n    \"Content-Type\": \"application/json\"\n};\n\nasync function tryInitialize() {\n    // Some builds are very picky about the init shape/headers.\n    // We'll try 5 variants: minimal, clientInfo, clientName, SSE-without-body, and header-based.\n    const variants = [\n        // V1: minimal JSON-RPC (no params)\n        {\n            body: { jsonrpc:\"2.0\", id:\"init-1\", method:\"initialize\" },\n            headers: { \"Accept\":\"application/json, text/event-stream\", \"Content-Type\":\"application/json\" }\n        },\n        // V2: clientInfo + protocolVersion\n        {\n            body: { jsonrpc:\"2.0\", id:\"init-2\", method:\"initialize\",\n                params:{ clientInfo:{ name:\"NodeClient\", version:\"1.0.0\" }, protocolVersion:\"2024-11-05\", capabilities:{} } },\n            headers: { \"Accept\":\"application/json, text/event-stream\", \"Content-Type\":\"application/json\" }\n        },\n        // V3: clientName/clientVersion\n        {\n            body: { jsonrpc:\"2.0\", id:\"init-3\", method:\"initialize\",\n                params:{ clientName:\"NodeClient\", clientVersion:\"1.0.0\" } },\n            headers: { \"Accept\":\"application/json, text/event-stream\", \"Content-Type\":\"application/json\" }\n        },\n        // V4: POST with NO BODY, SSE accept (some builds create session and return mcp-session-id)\n        {\n            raw: true,\n            headers: { \"Accept\":\"text/event-stream\" }  // no Content-Type, no body\n        },\n        // V5: header-declared protocol version + empty JSON body\n        {\n            body: { jsonrpc:\"2.0\", id:\"init-5\", method:\"initialize\" },\n            headers: { \"Accept\":\"application/json, text/event-stream\", \"Content-Type\":\"application/json\", \"MCP-Protocol-Version\":\"2024-11-05\" }\n        }\n    ];\n\n    for (const v of variants) {\n        try {\n            const res = await fetch(BASE, {\n                method: \"POST\",\n                headers: v.headers,\n                body: v.raw ? undefined : JSON.stringify(v.body)\n            });\n\n            const lower = {};\n            for (const [k, val] of res.headers) lower[k.toLowerCase()] = val;\n\n            let sid = lower[\"mcp-session-id\"] || lower[\"x-session-id\"] || null;\n            let json = null;\n            if (res.headers.get(\"content-type\")?.includes(\"application/json\")) {\n                try { json = await res.json(); } catch {}\n            }\n\n            if (!sid && json) sid = json?.result?.sessionId || json?.sessionId || null;\n\n            if (res.ok && sid) {\n                log(`✅ initialize OK — sessionId: ${sid}`);\n                return sid;\n            } else {\n                const msg = json?.error?.message || res.statusText;\n                log(`init variant failed (${res.status}) with headers ${JSON.stringify(lower)}: ${msg}`);\n            }\n        } catch (e) {\n            log(`init variant threw: ${e?.message || e}`);\n        }\n    }\n    return null;\n}\n\n\nasync function openStream(sessionId) {\n    const candidates = [\n        // 1) GET /mcp with header\n        { method: \"GET\", path: \"/mcp\", headers: (sid) => ({ \"Accept\": \"text/event-stream\", \"Cache-Control\": \"no-cache\", ...(sid ? { \"X-Session-Id\": sid } : {}) }) },\n        // 2) GET /mcp?sessionId=...\n        { method: \"GET\", path: (sid) => `/mcp${sid ? `?sessionId=${encodeURIComponent(sid)}` : \"\"}`, headers: () => ({ \"Accept\": \"text/event-stream\", \"Cache-Control\": \"no-cache\" }) },\n        // 3) GET /mcp/stream with header\n        { method: \"GET\", path: \"/mcp/stream\", headers: (sid) => ({ \"Accept\": \"text/event-stream\", \"Cache-Control\": \"no-cache\", ...(sid ? { \"X-Session-Id\": sid } : {}) }) },\n        // 4) GET /mcp/stream?sessionId=...\n        { method: \"GET\", path: (sid) => `/mcp/stream${sid ? `?sessionId=${encodeURIComponent(sid)}` : \"\"}`, headers: () => ({ \"Accept\": \"text/event-stream\", \"Cache-Control\": \"no-cache\" }) },\n        // 5) POST /mcp (some builds open SSE on POST)\n        { method: \"POST\", path: \"/mcp\", headers: () => ({ \"Accept\": \"text/event-stream\" }), body: \"\" },\n    ];\n\n    for (const c of candidates) {\n        try {\n            const url = new URL(typeof c.path === \"function\" ? c.path(sessionId) : c.path, BASE);\n            const res = await fetch(url, {\n                method: c.method,\n                headers: c.headers(sessionId),\n                body: c.body ?? undefined\n            });\n\n            if (!res.ok) {\n                const text = await res.text().catch(() => \"\");\n                console.log(`stream candidate ${c.method} ${url.pathname}${url.search} → ${res.status}`, text.slice(0, 200));\n                continue; // try next\n            }\n\n            const lower = {};\n            for (const [k, v] of res.headers) lower[k.toLowerCase()] = v;\n            const sid = lower[\"mcp-session-id\"] || sessionId || null;\n\n            console.log(`📡 stream open (HTTP ${res.status}) via ${c.method} ${url.pathname}${url.search} — sessionId: ${sid || \"n/a\"}`);\n            readEventStream(res.body);\n            return sid;\n        } catch (e) {\n            console.log(\"stream candidate error:\", e?.message || e);\n        }\n    }\n\n    throw new Error(\"No stream endpoint accepted the session. Server may require an IDE MCP client.\");\n}\n\n\nasync function rpc(sessionId, method, params = {}, id = randomId()) {\n    const body = {\n        jsonrpc: \"2.0\",\n        id,\n        method,\n        params: { sessionId, ...(params || {}) }\n    };\n\n    const res = await fetch(BASE, {\n        method: \"POST\",\n        headers: {\n            \"Accept\": \"application/json, text/event-stream\",\n            \"Content-Type\": \"application/json\",\n            // 👇 some builds REJECT calls unless the session is also in a header\n            ...(sessionId ? { \"X-Session-Id\": sessionId } : {}),\n            \"MCP-Protocol-Version\": \"2024-11-05\"\n        },\n        body: JSON.stringify(body)\n    });\n\n    const text = await res.text();\n    try { return JSON.parse(text); } catch { return { status: res.status, body: text }; }\n}\n\n\n// --- SSE reader (simple) ---\nasync function readEventStream(readable) {\n    const decoder = new TextDecoder();\n    const reader = readable.getReader();\n    let buf = \"\";\n    (async () => {\n        for (;;) {\n            const { done, value } = await reader.read();\n            if (done) { log(\"🔌 stream ended\"); break; }\n            buf += decoder.decode(value, { stream: true });\n            let idx;\n            while ((idx = buf.indexOf(\"\\n\\n\")) >= 0) {\n                const chunk = buf.slice(0, idx);\n                buf = buf.slice(idx + 2);\n                handleEventChunk(chunk);\n            }\n        }\n    })().catch(e => log(\"stream error:\", e?.message || e));\n}\n\nfunction handleEventChunk(chunk) {\n    // Basic SSE format: lines starting with \"event:\" and \"data:\"\n    const lines = chunk.split(/\\r?\\n/);\n    let event = \"message\";\n    let data = \"\";\n    for (const line of lines) {\n        if (line.startsWith(\"event:\")) event = line.slice(6).trim();\n        else if (line.startsWith(\"data:\")) data += line.slice(5).trim();\n    }\n    if (!data) return;\n    try {\n        const obj = JSON.parse(data);\n        log(`📥 [${event}]`, obj);\n    } catch {\n        log(`📥 [${event}]`, data);\n    }\n}\n\n// --- tiny REPL to send calls ---\nimport readline from \"node:readline/promises\";\nimport { stdin as input, stdout as output } from \"node:process\";\n\nfunction log(...args) { console.log(...args); }\n\nfunction randomId() {\n    return Math.random().toString(16).slice(2);\n}\n\nasync function main() {\n    log(`🔗 Figma MCP URL: ${BASE}`);\n\n    // Strategy:\n    // 1) Try initialize to get session.\n    // 2) If that fails, try opening SSE without it to see if server auto-assigns (some builds do).\n    // 3) If that 400s, bail with a clear error message.\n    let sessionId = await tryInitialize();\n\n    if (!sessionId) {\n        console.log(\"No session from initialize; trying stream-less RPC (replies will come on the POST).\");\n    } else {\n        try {\n            await openStream(sessionId);\n        } catch (e) {\n            console.log(\"⚠️ Stream couldn’t open:\", e.message);\n            console.log(\"→ Fallback: you can still type RPCs; responses will print below.\");\n        }\n    }\n\n\n    if (!sessionId) {\n        log(\"⚠️ No session id exposed by headers; RPC may still work if the server bound the stream implicitly.\");\n    } else {\n        log(\"✅ Ready. Type commands (e.g. `tools/list`, `resources/list`, `prompts/list`).\");\n    }\n\n    const rl = readline.createInterface({ input, output });\n    for (;;) {\n        const line = (await rl.question(\"> \")).trim();\n        if (!line) continue;\n        if (line === \"exit\" || line === \"quit\") break;\n\n        // parse: method [JSON params]\n        // example: tools/list\n        // example: resources/get {\"uri\":\"figma://file/...\"}\n        let method = line;\n        let params = {};\n        const space = line.indexOf(\" \");\n        if (space > 0) {\n            method = line.slice(0, space).trim();\n            const p = line.slice(space + 1).trim();\n            if (p) {\n                try { params = JSON.parse(p); }\n                catch { log(\"⚠️ params must be valid JSON\"); continue; }\n            }\n        }\n        try {\n            const res = await rpc(sessionId, method, params);\n            log(\"📤 RPC result:\", res);\n        } catch (e) {\n            log(\"❌ RPC error:\", e?.message || e);\n        }\n    }\n\n    log(\"bye!\");\n    process.exit(0);\n}\n\nmain().catch(e => {\n    console.error(\"fatal:\", e);\n    process.exit(1);\n});\n"
    },
    {
      "name": "manifest.json",
      "type": "file",
      "content": "{\n  \"name\": \"DesignOps Assistant (Dev)\",\n  \"id\": \"designops-assistant-dev\",\n  \"api\": \"1.0.0\",\n  \"editorType\": [\"figma\"],\n  \"main\": \"dist/code.js\",\n  \"ui\": \"dist/ui.html\",\n  \"networkAccess\": {\n    \"allowedDomains\": [\n      \"https://your-server.example.com\"\n    ],\n    \"devAllowedDomains\": [\n      \"http://localhost:3000/\"\n    ],\n    \"reasoning\": \"Plugin fetches rules/changesets from our webhook server.\"\n  }\n}"
    },
    {
      "name": "package-lock.json",
      "type": "file",
      "content": "{\n  \"name\": \"figma-design-scanner\",\n  \"version\": \"0.1.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"figma-design-scanner\",\n      \"version\": \"0.1.0\",\n      \"devDependencies\": {\n        \"@figma/plugin-typings\": \"^1.88.0\",\n        \"esbuild\": \"^0.21.5\",\n        \"typescript\": \"^5.5.4\"\n      }\n    },\n    \"node_modules/@esbuild/aix-ppc64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz\",\n      \"integrity\": \"sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"aix\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/android-arm\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.21.5.tgz\",\n      \"integrity\": \"sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/android-arm64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.21.5.tgz\",\n      \"integrity\": \"sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/android-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/darwin-arm64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.21.5.tgz\",\n      \"integrity\": \"sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/darwin-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/freebsd-arm64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.21.5.tgz\",\n      \"integrity\": \"sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/freebsd-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-arm\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.21.5.tgz\",\n      \"integrity\": \"sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-arm64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.21.5.tgz\",\n      \"integrity\": \"sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-ia32\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.21.5.tgz\",\n      \"integrity\": \"sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-loong64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.21.5.tgz\",\n      \"integrity\": \"sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==\",\n      \"cpu\": [\n        \"loong64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-mips64el\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.21.5.tgz\",\n      \"integrity\": \"sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==\",\n      \"cpu\": [\n        \"mips64el\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-ppc64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.21.5.tgz\",\n      \"integrity\": \"sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-riscv64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.21.5.tgz\",\n      \"integrity\": \"sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==\",\n      \"cpu\": [\n        \"riscv64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-s390x\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.21.5.tgz\",\n      \"integrity\": \"sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==\",\n      \"cpu\": [\n        \"s390x\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/netbsd-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"netbsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/openbsd-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"openbsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/sunos-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"sunos\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/win32-arm64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.21.5.tgz\",\n      \"integrity\": \"sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/win32-ia32\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.21.5.tgz\",\n      \"integrity\": \"sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/win32-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@figma/plugin-typings\": {\n      \"version\": \"1.117.1\",\n      \"resolved\": \"https://registry.npmjs.org/@figma/plugin-typings/-/plugin-typings-1.117.1.tgz\",\n      \"integrity\": \"sha512-YrPuZhXDH6naMxQrdrf4+E6aSstkkvv7pVHl9VTeoqkFTGptqw9BbhMSb7jPnT9+elLsRdZVKvWMwcBlyB3OhQ==\",\n      \"dev\": true,\n      \"license\": \"MIT License\"\n    },\n    \"node_modules/esbuild\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.21.5.tgz\",\n      \"integrity\": \"sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"esbuild\": \"bin/esbuild\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"optionalDependencies\": {\n        \"@esbuild/aix-ppc64\": \"0.21.5\",\n        \"@esbuild/android-arm\": \"0.21.5\",\n        \"@esbuild/android-arm64\": \"0.21.5\",\n        \"@esbuild/android-x64\": \"0.21.5\",\n        \"@esbuild/darwin-arm64\": \"0.21.5\",\n        \"@esbuild/darwin-x64\": \"0.21.5\",\n        \"@esbuild/freebsd-arm64\": \"0.21.5\",\n        \"@esbuild/freebsd-x64\": \"0.21.5\",\n        \"@esbuild/linux-arm\": \"0.21.5\",\n        \"@esbuild/linux-arm64\": \"0.21.5\",\n        \"@esbuild/linux-ia32\": \"0.21.5\",\n        \"@esbuild/linux-loong64\": \"0.21.5\",\n        \"@esbuild/linux-mips64el\": \"0.21.5\",\n        \"@esbuild/linux-ppc64\": \"0.21.5\",\n        \"@esbuild/linux-riscv64\": \"0.21.5\",\n        \"@esbuild/linux-s390x\": \"0.21.5\",\n        \"@esbuild/linux-x64\": \"0.21.5\",\n        \"@esbuild/netbsd-x64\": \"0.21.5\",\n        \"@esbuild/openbsd-x64\": \"0.21.5\",\n        \"@esbuild/sunos-x64\": \"0.21.5\",\n        \"@esbuild/win32-arm64\": \"0.21.5\",\n        \"@esbuild/win32-ia32\": \"0.21.5\",\n        \"@esbuild/win32-x64\": \"0.21.5\"\n      }\n    },\n    \"node_modules/typescript\": {\n      \"version\": \"5.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.9.3.tgz\",\n      \"integrity\": \"sha512-jl1vZzPDinLr9eUt3J/t7V6FgNEw9QjvBPdysz9KfQDD41fQrC2Y4vKQdiaUpFT4bXlb1RHhLpp8wtm6M5TgSw==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"bin\": {\n        \"tsc\": \"bin/tsc\",\n        \"tsserver\": \"bin/tsserver\"\n      },\n      \"engines\": {\n        \"node\": \">=14.17\"\n      }\n    }\n  }\n}\n"
    },
    {
      "name": "package.json",
      "type": "file",
      "content": "{\n  \"scripts\": {\n    \"build\": \"esbuild src/main.ts --bundle --outfile=dist/code.js --platform=node --format=cjs --target=es2019 --loader:.json=json && esbuild src/ui.ts --bundle --outfile=dist/ui.js --platform=browser --target=es2019 && node -e \\\"const fs=require('fs');fs.mkdirSync('dist',{recursive:true});fs.copyFileSync('src/ui.html','dist/ui.html');\\\"\",\n    \"watch\": \"npm run build -- --watch\",\n    \"typecheck\": \"tsc --noEmit\",\n    \"server\": \"node server/index.mjs\"\n  }\n}"
    },
    {
      "name": "server",
      "type": "folder",
      "children": [
        {
          "name": "index.mjs",
          "type": "file",
          "content": "import express from \"express\";\nconst app = express();\napp.use(express.json());\n\n\nconst PASSCODE = process.env.FIGMA_PASSCODE || \"dev-pass\";\n\n\n// In-memory rules example; swap for a DB if you like\nlet rules = [\n    {\n        name: \"Normalize Cards\",\n        match: { nameRegex: \"(?i)card|tile\" },\n        set: { layoutMode: \"VERTICAL\", itemSpacing: 12, padding: { top: 24, right: 24, bottom: 24, left: 24 } }\n    }\n];\n\n\napp.get(\"/rules\", (req, res) => { res.json(rules); });\napp.post(\"/rules\", (req, res) => { rules = Array.isArray(req.body) ? req.body : rules; res.json({ ok: true, count: rules.length }); });\n\n\n// Figma webhook endpoint — add this URL when creating the webhook\napp.post(\"/figma/webhook\", (req, res) => {\n    const { passcode, event_type, file_key } = req.body || {};\n    if (passcode !== PASSCODE) return res.status(400).send(\"bad passcode\");\n    res.status(200).send(\"ok\");\n    console.log(\"▶️\", event_type, file_key);\n// Optional: adjust rules based on event_type, or enqueue work for CI, etc.\n});\n\n\nconst port = process.env.PORT || 3000;\napp.listen(port, () => console.log(`Webhook server listening on :${port}`));"
        },
        {
          "name": "package-lock.json",
          "type": "file",
          "content": "{\n  \"name\": \"figma-webhook-server\",\n  \"version\": \"0.1.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"figma-webhook-server\",\n      \"version\": \"0.1.0\",\n      \"dependencies\": {\n        \"express\": \"^4.19.2\"\n      }\n    },\n    \"node_modules/accepts\": {\n      \"version\": \"1.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mime-types\": \"~2.1.34\",\n        \"negotiator\": \"0.6.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/array-flatten\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\n      \"integrity\": \"sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/body-parser\": {\n      \"version\": \"1.20.3\",\n      \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz\",\n      \"integrity\": \"sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bytes\": \"3.1.2\",\n        \"content-type\": \"~1.0.5\",\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"destroy\": \"1.2.0\",\n        \"http-errors\": \"2.0.0\",\n        \"iconv-lite\": \"0.4.24\",\n        \"on-finished\": \"2.4.1\",\n        \"qs\": \"6.13.0\",\n        \"raw-body\": \"2.5.2\",\n        \"type-is\": \"~1.6.18\",\n        \"unpipe\": \"1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\",\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\n      }\n    },\n    \"node_modules/bytes\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\n      \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/call-bind-apply-helpers\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz\",\n      \"integrity\": \"sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/call-bound\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz\",\n      \"integrity\": \"sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/content-disposition\": {\n      \"version\": \"0.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz\",\n      \"integrity\": \"sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safe-buffer\": \"5.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/content-type\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz\",\n      \"integrity\": \"sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/cookie\": {\n      \"version\": \"0.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz\",\n      \"integrity\": \"sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/cookie-signature\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\n      \"integrity\": \"sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/depd\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\n      \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/destroy\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\n      \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\",\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\n      }\n    },\n    \"node_modules/dunder-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/ee-first\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\n      \"integrity\": \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/encodeurl\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz\",\n      \"integrity\": \"sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/es-define-property\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz\",\n      \"integrity\": \"sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-object-atoms\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz\",\n      \"integrity\": \"sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/escape-html\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\n      \"integrity\": \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/etag\": {\n      \"version\": \"1.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\n      \"integrity\": \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/express\": {\n      \"version\": \"4.21.2\",\n      \"resolved\": \"https://registry.npmjs.org/express/-/express-4.21.2.tgz\",\n      \"integrity\": \"sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"accepts\": \"~1.3.8\",\n        \"array-flatten\": \"1.1.1\",\n        \"body-parser\": \"1.20.3\",\n        \"content-disposition\": \"0.5.4\",\n        \"content-type\": \"~1.0.4\",\n        \"cookie\": \"0.7.1\",\n        \"cookie-signature\": \"1.0.6\",\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"etag\": \"~1.8.1\",\n        \"finalhandler\": \"1.3.1\",\n        \"fresh\": \"0.5.2\",\n        \"http-errors\": \"2.0.0\",\n        \"merge-descriptors\": \"1.0.3\",\n        \"methods\": \"~1.1.2\",\n        \"on-finished\": \"2.4.1\",\n        \"parseurl\": \"~1.3.3\",\n        \"path-to-regexp\": \"0.1.12\",\n        \"proxy-addr\": \"~2.0.7\",\n        \"qs\": \"6.13.0\",\n        \"range-parser\": \"~1.2.1\",\n        \"safe-buffer\": \"5.2.1\",\n        \"send\": \"0.19.0\",\n        \"serve-static\": \"1.16.2\",\n        \"setprototypeof\": \"1.2.0\",\n        \"statuses\": \"2.0.1\",\n        \"type-is\": \"~1.6.18\",\n        \"utils-merge\": \"1.0.1\",\n        \"vary\": \"~1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/express\"\n      }\n    },\n    \"node_modules/finalhandler\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz\",\n      \"integrity\": \"sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"on-finished\": \"2.4.1\",\n        \"parseurl\": \"~1.3.3\",\n        \"statuses\": \"2.0.1\",\n        \"unpipe\": \"~1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/forwarded\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\n      \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/fresh\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\n      \"integrity\": \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz\",\n      \"integrity\": \"sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.2\",\n        \"es-define-property\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.1.1\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-proto\": \"^1.0.1\",\n        \"gopd\": \"^1.2.0\",\n        \"has-symbols\": \"^1.1.0\",\n        \"hasown\": \"^2.0.2\",\n        \"math-intrinsics\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"dunder-proto\": \"^1.0.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz\",\n      \"integrity\": \"sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz\",\n      \"integrity\": \"sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/hasown\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/http-errors\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\n      \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"depd\": \"2.0.0\",\n        \"inherits\": \"2.0.4\",\n        \"setprototypeof\": \"1.2.0\",\n        \"statuses\": \"2.0.1\",\n        \"toidentifier\": \"1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/iconv-lite\": {\n      \"version\": \"0.4.24\",\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safer-buffer\": \">= 2.1.2 < 3\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/ipaddr.js\": {\n      \"version\": \"1.9.1\",\n      \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\n      \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/math-intrinsics\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz\",\n      \"integrity\": \"sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/media-typer\": {\n      \"version\": \"0.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\n      \"integrity\": \"sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/merge-descriptors\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz\",\n      \"integrity\": \"sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/methods\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\n      \"integrity\": \"sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.6.0.tgz\",\n      \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\",\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"mime\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/mime-db\": {\n      \"version\": \"1.52.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime-types\": {\n      \"version\": \"2.1.35\",\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mime-db\": \"1.52.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/negotiator\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.13.4\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz\",\n      \"integrity\": \"sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/on-finished\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\n      \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ee-first\": \"1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/parseurl\": {\n      \"version\": \"1.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/path-to-regexp\": {\n      \"version\": \"0.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz\",\n      \"integrity\": \"sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/proxy-addr\": {\n      \"version\": \"2.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\n      \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"forwarded\": \"0.2.0\",\n        \"ipaddr.js\": \"1.9.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/qs\": {\n      \"version\": \"6.13.0\",\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.13.0.tgz\",\n      \"integrity\": \"sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==\",\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"side-channel\": \"^1.0.6\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/range-parser\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/raw-body\": {\n      \"version\": \"2.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz\",\n      \"integrity\": \"sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bytes\": \"3.1.2\",\n        \"http-errors\": \"2.0.0\",\n        \"iconv-lite\": \"0.4.24\",\n        \"unpipe\": \"1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/safe-buffer\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/send\": {\n      \"version\": \"0.19.0\",\n      \"resolved\": \"https://registry.npmjs.org/send/-/send-0.19.0.tgz\",\n      \"integrity\": \"sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"destroy\": \"1.2.0\",\n        \"encodeurl\": \"~1.0.2\",\n        \"escape-html\": \"~1.0.3\",\n        \"etag\": \"~1.8.1\",\n        \"fresh\": \"0.5.2\",\n        \"http-errors\": \"2.0.0\",\n        \"mime\": \"1.6.0\",\n        \"ms\": \"2.1.3\",\n        \"on-finished\": \"2.4.1\",\n        \"range-parser\": \"~1.2.1\",\n        \"statuses\": \"2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/send/node_modules/encodeurl\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\n      \"integrity\": \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/send/node_modules/ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/serve-static\": {\n      \"version\": \"1.16.2\",\n      \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz\",\n      \"integrity\": \"sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"parseurl\": \"~1.3.3\",\n        \"send\": \"0.19.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/setprototypeof\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz\",\n      \"integrity\": \"sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"object-inspect\": \"^1.13.3\",\n        \"side-channel-list\": \"^1.0.0\",\n        \"side-channel-map\": \"^1.0.1\",\n        \"side-channel-weakmap\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-list\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz\",\n      \"integrity\": \"sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"object-inspect\": \"^1.13.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-map\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz\",\n      \"integrity\": \"sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.5\",\n        \"object-inspect\": \"^1.13.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-weakmap\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz\",\n      \"integrity\": \"sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.5\",\n        \"object-inspect\": \"^1.13.3\",\n        \"side-channel-map\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/statuses\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\n      \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/toidentifier\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.6\"\n      }\n    },\n    \"node_modules/type-is\": {\n      \"version\": \"1.6.18\",\n      \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\n      \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"media-typer\": \"0.3.0\",\n        \"mime-types\": \"~2.1.24\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/unpipe\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\n      \"integrity\": \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/utils-merge\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\n      \"integrity\": \"sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/vary\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\n      \"integrity\": \"sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "file",
          "content": "{\n  \"name\": \"figma-webhook-server\",\n  \"private\": true,\n  \"type\": \"module\",\n  \"version\": \"0.1.0\",\n  \"scripts\": {\n    \"start\": \"node index.mjs\"\n  },\n  \"dependencies\": {\n    \"express\": \"^4.19.2\"\n  }\n}"
        }
      ]
    },
    {
      "name": "src",
      "type": "folder",
      "children": [
        {
          "name": ".DS_Store",
          "type": "file",
          "content": null
        },
        {
          "name": "actions.ts",
          "type": "file",
          "content": "export type Rule = {\n    name?: string; // display\n    match?: { nameRegex?: string; type?: SceneNode[\"type\"] };\n    set?: {\n        layoutMode?: \"VERTICAL\" | \"HORIZONTAL\" | \"NONE\";\n        itemSpacing?: number;\n        padding?: { top?: number; right?: number; bottom?: number; left?: number };\n        sizing?: { primaryAxis?: \"FIXED\" | \"AUTO\"; counterAxis?: \"FIXED\" | \"AUTO\" };\n        align?: {\n            primary?: \"MIN\" | \"CENTER\" | \"MAX\" | \"SPACE_BETWEEN\";\n            counter?: \"MIN\" | \"CENTER\" | \"MAX\";\n        };\n    };\n};\n\nexport function normalizeSpacingInSelection(\n    padding = 24,\n    item = 12,\n    layout: \"VERTICAL\" | \"HORIZONTAL\" = \"VERTICAL\"\n) {\n    const nodes = figma.currentPage.selection.filter(\n        (n): n is FrameNode => n.type === \"FRAME\" || n.type === \"COMPONENT\" || n.type === \"INSTANCE\"\n    );\n    if (!nodes.length) figma.notify(\"No frames selected — adjusting all visible frames on page\");\n    const targets: SceneNode[] = nodes.length ? nodes : figma.currentPage.findAll(n => \"layoutMode\" in n);\n    let changed = 0;\n    for (const node of targets) {\n        const f = node as any;\n        if (f.layoutMode === \"NONE\") f.layoutMode = layout;\n        if (typeof f.paddingTop === \"number\") {\n            f.paddingTop = padding;\n            f.paddingRight = padding;\n            f.paddingBottom = padding;\n            f.paddingLeft = padding;\n        }\n        if (typeof f.itemSpacing === \"number\") f.itemSpacing = item;\n        changed++;\n    }\n    figma.notify(`✅ Updated spacing on ${changed} node(s)`);\n}\n\nexport function applyRulesToPage(rules: Rule[]) {\n    const frames = figma.currentPage.findAll(n => \"layoutMode\" in n) as SceneNode[];\n    let touched = 0;\n    for (const n of frames) {\n        for (const r of rules) {\n            if (!matches(n, r.match)) continue;\n            if (r.set) {\n                setProps(n, r.set);\n                touched++;\n            }\n        }\n    }\n    figma.notify(`✅ Applied ${rules.length} rule(s) to ${touched} node(s)`);\n}\n\nfunction matches(n: SceneNode, m?: Rule[\"match\"]) {\n    if (!m) return true;\n    if (m.type && n.type !== m.type) return false;\n    if (m.nameRegex) {\n        try {\n            if (!new RegExp(m.nameRegex).test(n.name)) return false;\n        } catch {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction setProps(n: SceneNode, s: NonNullable<Rule[\"set\"]>) {\n    const f = n as any;\n    if (s.layoutMode && \"layoutMode\" in f) f.layoutMode = s.layoutMode;\n    if (s.itemSpacing != null && \"itemSpacing\" in f) f.itemSpacing = s.itemSpacing;\n    if (s.padding && \"paddingTop\" in f) {\n        const p = s.padding;\n        if (p.top != null) f.paddingTop = p.top;\n        if (p.right != null) f.paddingRight = p.right;\n        if (p.bottom != null) f.paddingBottom = p.bottom;\n        if (p.left != null) f.paddingLeft = p.left;\n    }\n    if (s.sizing) {\n        if (s.sizing.primaryAxis && \"primaryAxisSizingMode\" in f) f.primaryAxisSizingMode = s.sizing.primaryAxis;\n        if (s.sizing.counterAxis && \"counterAxisSizingMode\" in f) f.counterAxisSizingMode = s.sizing.counterAxis;\n    }\n    if (s.align) {\n        if (s.align.primary && \"primaryAxisAlignItems\" in f) f.primaryAxisAlignItems = s.align.primary;\n        if (s.align.counter && \"counterAxisAlignItems\" in f) f.counterAxisAlignItems = s.align.counter;\n    }\n}\n"
        },
        {
          "name": "core",
          "type": "folder",
          "children": [
            {
              "name": "export.ts",
              "type": "file",
              "content": "type ExportOptions = {\n    onlyFrames?: boolean;     // default true: export frames only\n    maxChildren?: number;     // per node\n    maxDepth?: number;        // nesting depth\n    includePrototype?: boolean;\n    includeTextContent?: boolean;\n    includeBindings?: boolean; // variable bindings\n};\n\nexport function exportVariablesJSON() {\n    const result: any = { collections: [] };\n    const collections = figma.variables.getLocalVariableCollections();\n    const allVars = figma.variables.getLocalVariables();\n\n    for (const coll of collections) {\n        const entry: any = {\n            id: coll.id,\n            name: coll.name,\n            modes: coll.modes.map(m => ({ id: m.modeId, name: m.name })),\n            variables: []\n        };\n        for (const v of allVars) {\n            if (v.variableCollectionId !== coll.id) continue;\n            const perMode: Record<string, any> = {};\n            for (const m of coll.modes) {\n                const val = v.valuesByMode?.[m.modeId];\n                if (val !== undefined) perMode[m.name] = normalizeValue(v.resolvedType, val);\n            }\n            entry.variables.push({\n                id: v.id, name: v.name, type: v.resolvedType, valuesByMode: perMode\n            });\n        }\n        result.collections.push(entry);\n    }\n    return result;\n}\n\nexport function exportSelectionJSON(opts?: Partial<ExportOptions>) {\n    const options = withDefaults(opts);\n    const sel = figma.currentPage.selection.filter(n => filterNode(n, options));\n    return sel.map(n => serializeNode(n as SceneNode, options, 0));\n}\n\nexport function exportDocumentJSON(opts?: Partial<ExportOptions>) {\n    const options = withDefaults(opts);\n    const frames = figma.currentPage\n        .findAll(n => filterNode(n, options)) as SceneNode[];\n    return frames.map(n => serializeNode(n, options, 0));\n}\n\n// ---------- helpers ----------\n\nfunction withDefaults(opts?: Partial<ExportOptions>): Required<ExportOptions> {\n    return {\n        onlyFrames: opts?.onlyFrames ?? true,\n        maxChildren: Math.max(0, opts?.maxChildren ?? 200),\n        maxDepth: Math.max(0, opts?.maxDepth ?? 3),\n        includePrototype: opts?.includePrototype ?? true,\n        includeTextContent: opts?.includeTextContent ?? true,\n        includeBindings: opts?.includeBindings ?? true,\n    };\n}\n\nfunction filterNode(n: BaseNode, options: Required<ExportOptions>) {\n    if (n.type === \"PAGE\") return false;\n    if (!(\"visible\" in n) || !(n as any).visible) return false;\n    if (!options.onlyFrames) return \"type\" in n;\n    return n.type === \"FRAME\" || n.type === \"COMPONENT\" || n.type === \"INSTANCE\";\n}\n\nfunction serializeNode(n: SceneNode, options: Required<ExportOptions>, depth: number): any {\n    const base: any = {\n        id: n.id,\n        name: n.name,\n        type: n.type,\n        x: \"x\" in n ? (n as any).x : undefined,\n        y: \"y\" in n ? (n as any).y : undefined,\n        width: \"width\" in n ? (n as any).width : undefined,\n        height: \"height\" in n ? (n as any).height : undefined,\n        rotation: \"rotation\" in n ? (n as any).rotation : undefined,\n        layout: pickLayout(n),\n        fills: pickPaints((n as any).fills),\n        strokes: pickPaints((n as any).strokes),\n        effects: pickEffects((n as any).effects),\n        cornerRadius: (n as any).cornerRadius,\n        constraints: (n as any).constraints,\n        opacity: (n as any).opacity,\n        visible: (n as any).visible,\n        locked: (n as any).locked,\n    };\n\n    if (options.includeBindings) base.bindings = pickBindings(n);\n    if (options.includeTextContent && n.type === \"TEXT\") base.characters = (n as TextNode).characters;\n    if (options.includePrototype) base.prototype = pickPrototype(n);\n\n    if (\"children\" in n && depth < options.maxDepth) {\n        const kids = (n as any).children as ReadonlyArray<SceneNode>;\n        base.children = [];\n        let count = 0;\n        for (const c of kids) {\n            if (!(\"visible\" in c) || !(c as any).visible) continue;\n            base.children.push(serializeNode(c, options, depth + 1));\n            if (++count >= options.maxChildren) { base.truncated = true; break; }\n        }\n    }\n    return compact(base);\n}\n\nfunction pickLayout(n: SceneNode) {\n    const k: any = {};\n    if (\"layoutMode\" in n) {\n        k.layoutMode = (n as any).layoutMode; // VERTICAL | HORIZONTAL | NONE\n        k.primaryAxisSizingMode = (n as any).primaryAxisSizingMode;\n        k.counterAxisSizingMode = (n as any).counterAxisSizingMode;\n        k.itemSpacing = (n as any).itemSpacing;\n        k.padding = {\n            top: (n as any).paddingTop,\n            right: (n as any).paddingRight,\n            bottom: (n as any).paddingBottom,\n            left: (n as any).paddingLeft\n        };\n        k.counterAxisAlignItems = (n as any).counterAxisAlignItems;\n        k.primaryAxisAlignItems = (n as any).primaryAxisAlignItems;\n    }\n    if (\"layoutGrids\" in n) k.layoutGrids = (n as any).layoutGrids;\n    return compact(k);\n}\n\nfunction pickPaints(paints: Paint[] | PluginAPI[\"mixed\"]) {\n    if (!paints || paints === figma.mixed) return undefined;\n    return (paints as Paint[]).map(p => {\n        if (p.type === \"SOLID\") {\n            const s = p as SolidPaint;\n            const colorHex = rgbToHex(s.color);\n            const bound = (s as any).boundVariables?.color;\n            return compact({ type: \"SOLID\", hex: colorHex, opacity: s.opacity, variableId: bound });\n        }\n        if (p.type === \"GRADIENT_LINEAR\" || p.type === \"GRADIENT_RADIAL\") {\n            return { type: p.type, gradientStops: (p as any).gradientStops?.length };\n        }\n        return { type: p.type };\n    });\n}\n\nfunction pickEffects(effects: readonly Effect[] | PluginAPI[\"mixed\"]) {\n    if (!effects || effects === figma.mixed) return undefined;\n    return effects.map(e => ({ type: e.type, radius: (e as any).radius, spread: (e as any).spread }));\n}\n\nfunction pickBindings(n: SceneNode) {\n    const binds: any = {};\n    if (\"boundVariables\" in n) binds.node = (n as any).boundVariables ?? undefined;\n    // text fills often carry boundVariables in fills; we already expose per paint above\n    return compact(binds);\n}\n\nfunction pickPrototype(n: SceneNode) {\n    const p: any = {};\n    // limited snapshot to avoid heavy graphs\n    if (\"flowStartingPoints\" in figma.currentPage && figma.currentPage.flowStartingPoints) {\n        // page-level; leave out\n    }\n    // Node-level interactions\n    // @ts-ignore access safely\n    const interactions = (n as any).reactions || (n as any).prototypeDevice; // reactions is the main one\n    if (interactions) p.reactions = interactions;\n    return compact(p);\n}\n\nfunction rgbToHex(c: RGB) {\n    const r = Math.round((c.r ?? 0) * 255);\n    const g = Math.round((c.g ?? 0) * 255);\n    const b = Math.round((c.b ?? 0) * 255);\n    return \"#\" + [r,g,b].map(x => x.toString(16).padStart(2, \"0\")).join(\"\");\n}\n\nfunction normalizeValue(type: VariableResolvedDataType, val: any) {\n    if (type === \"COLOR\" && val && typeof val === \"object\" && \"r\" in val) return rgbToHex(val as RGB);\n    return val;\n}\n\nfunction compact<T extends object>(o: T): T {\n    const out: any = {};\n    for (const k in o) if ((o as any)[k] !== undefined) out[k] = (o as any)[k];\n    return out;\n}\n"
            }
          ]
        },
        {
          "name": "main.ts",
          "type": "file",
          "content": "import { exportVariablesJSON, exportSelectionJSON, exportDocumentJSON } from \"./core/export\";\nimport { normalizeSpacingInSelection, applyRulesToPage, type Rule } from \"./actions\";\n\nfigma.showUI(__html__, { width: 980, height: 620 });\n\nfigma.ui.onmessage = async (msg: any) => {\n    try {\n        switch (msg.type) {\n            case \"sync-tokens\":\n                figma.notify(\"✅ Tokens synced\");\n                figma.ui.postMessage({ type: \"notify\", text: \"Tokens synced\" });\n                return;\n\n            case \"export-variables\": {\n                const data = exportVariablesJSON();\n                figma.ui.postMessage({ type: \"export-result\", payload: data });\n                figma.notify(\"📤 Variables exported\");\n                return;\n            }\n\n            case \"export-selection\": {\n                const data = exportSelectionJSON({ onlyFrames: true, maxDepth: 4 });\n                figma.ui.postMessage({ type: \"export-result\", payload: data });\n                figma.notify(\"📤 Selection exported\");\n                return;\n            }\n\n            case \"export-document\": {\n                const data = exportDocumentJSON({ onlyFrames: true, maxDepth: 3, maxChildren: 500 });\n                figma.ui.postMessage({ type: \"export-result\", payload: data });\n                figma.notify(\"📤 Document exported\");\n                return;\n            }\n\n            case \"normalize-spacing\": {\n                normalizeSpacingInSelection(msg.padding ?? 24, msg.itemSpacing ?? 12, msg.layout ?? \"VERTICAL\");\n                return;\n            }\n\n            case \"apply-rules\": {\n                const rules: Rule[] = msg.rules || [];\n                applyRulesToPage(rules);\n                return;\n            }\n\n            case \"fetch-and-apply-rules\": {\n                const { serverUrl, token } = msg;\n                const res = await fetch(`${serverUrl.replace(/\\/$/, \"\")}/rules`, {\n                    headers: { Authorization: token ? `Bearer ${token}` : \"\" },\n                });\n                if (!res.ok) throw new Error(`Failed to GET /rules (${res.status})`);\n                const rules: Rule[] = await res.json();\n                applyRulesToPage(rules);\n                return;\n            }\n\n            default:\n                return;\n        }\n    } catch (e: any) {\n        figma.notify(`⚠️ ${e?.message || e}`);\n        figma.ui.postMessage({ type: \"notify\", text: `Error: ${e?.message || e}` });\n    }\n};\n"
        },
        {
          "name": "ui.html",
          "type": "file",
          "content": "<!doctype html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <title>DesignOps Assistant</title>\n    <style>\n        body { font: 12px/1.4 ui-sans-serif, system-ui; margin: 12px; }\n        .grid { display:grid; grid-template-columns: 1fr 1fr; gap: 12px; }\n        .bar { display:flex; gap:8px; flex-wrap:wrap; align-items:center; }\n        .bar input[type=\"number\"]{ width:72px; }\n        textarea { width: 100%; height: 220px; font-family: ui-monospace, monospace; }\n        .status { color:#666; text-align:right; }\n        #tree { font-family: ui-monospace, monospace; font-size:11px; line-height:1.35; max-height:280px; overflow:auto; border:1px solid #e5e5e5; padding:8px; border-radius:6px; }\n        details > summary { cursor:pointer; }\n        .muted{ color:#777 }\n        .pill{ background:#f3f3f3; border-radius:999px; padding:0 6px; margin-left:4px; }\n    </style>\n</head>\n<body>\n<div class=\"grid\">\n    <section>\n        <div class=\"bar\">\n            <button id=\"exportSelection\">Export Selection</button>\n            <button id=\"exportDoc\">Export Document</button>\n            <span class=\"status\" id=\"status\">Ready</span>\n        </div>\n\n\n        <details open>\n            <summary>Raw JSON</summary>\n            <textarea id=\"out\" spellcheck=\"false\"></textarea>\n        </details>\n    </section>\n\n\n    <section>\n        <div class=\"bar\">\n            <label>Padding <input id=\"pad\" type=\"number\" value=\"24\"/></label>\n            <label>Item <input id=\"gap\" type=\"number\" value=\"12\"/></label>\n            <select id=\"layout\">\n                <option>VERTICAL</option>\n                <option>HORIZONTAL</option>\n            </select>\n            <button id=\"normalize\">Normalize Spacing</button>\n        </div>\n\n\n        <div class=\"bar\" style=\"margin-top:6px\">\n            <input id=\"server\" placeholder=\"http://localhost:3000\" style=\"flex:1\"/>\n            <input id=\"token\" placeholder=\"Bearer token (optional)\"/>\n            <button id=\"pullApply\">Pull & Apply Rules</button>\n        </div>\n\n\n        <details open style=\"margin-top:8px\">\n            <summary>Node Visualizer</summary>\n            <div id=\"tree\">Click “Export Selection/Document” to render the tree.</div>\n        </details>\n    </section>\n</div>\n\n\n<script src=\"ui.js\"></script>\n</body>\n</html>"
        },
        {
          "name": "ui.ts",
          "type": "file",
          "content": "const send = (msg: any) => parent.postMessage({ pluginMessage: msg }, \"*\");\nconst out = document.getElementById(\"out\") as HTMLTextAreaElement;\nconst statusEl = document.getElementById(\"status\")!;\nconst serverEl = document.getElementById(\"server\") as HTMLInputElement;\nconst tokenEl = document.getElementById(\"token\") as HTMLInputElement;\nconst padEl = document.getElementById(\"pad\") as HTMLInputElement;\nconst gapEl = document.getElementById(\"gap\") as HTMLInputElement;\nconst layoutEl = document.getElementById(\"layout\") as HTMLSelectElement;\nconst treeEl = document.getElementById(\"tree\") as HTMLDivElement;\n\n\nfunction setStatus(s: string) { statusEl.textContent = s; }\n\n\n(document.getElementById(\"exportSelection\")!).onclick = () => { setStatus(\"Exporting selection…\"); send({ type: \"export-selection\" }); };\n(document.getElementById(\"exportDoc\")!).onclick = () => { setStatus(\"Exporting document…\"); send({ type: \"export-document\" }); };\n(document.getElementById(\"normalize\")!).onclick = () => {\n    const padding = parseInt(padEl.value || \"24\", 10);\n    const itemSpacing = parseInt(gapEl.value || \"12\", 10);\n    const layout = (layoutEl.value || \"VERTICAL\") as \"VERTICAL\" | \"HORIZONTAL\";\n    send({ type: \"normalize-spacing\", padding, itemSpacing, layout });\n};\n(document.getElementById(\"pullApply\")!).onclick = () => {\n    send({ type: \"fetch-and-apply-rules\", serverUrl: serverEl.value, token: tokenEl.value });\n};\n\n\nfunction renderTree(data: any) {\n    const items: any[] = Array.isArray(data) ? data : (data?.children || []);\n    const html = items.map(renderNode).join(\"\");\n    treeEl.innerHTML = html || '<span class=\"muted\">No nodes</span>';\n}\n\n\nfunction renderNode(n: any): string {\n    const title = `${n.name || n.id} <span class=\"pill\">${n.type}</span>`;\n    const meta = n.layout ? ` <span class=\"muted\">• layout: ${n.layout.layoutMode || \"NONE\"} • gap: ${n.layout.itemSpacing ?? \"–\"} • pad: ${padStr(n.layout.padding)}</span>` : \"\";\n    const head = `<summary>${title}${meta}</summary>`;\n    const kids = (n.children || []).map(renderNode).join(\"\");\n    return `<details open>${head}${kids}</details>`;\n}\n\n\nfunction padStr(p: any){ if(!p) return \"–\"; return `${p.top ?? 0}/${p.right ?? 0}/${p.bottom ?? 0}/${p.left ?? 0}`; }\n\n\n// inbound messages from plugin\n// - export-result → update JSON + tree\nwindow.onmessage = (e) => {\n    const msg = e.data?.pluginMessage;\n    if (!msg) return;\n    if (msg.type === \"export-result\") {\n        out.value = JSON.stringify(msg.payload, null, 2);\n        try { renderTree(msg.payload); } catch {}\n        setStatus(\"Ready\");\n    }\n    if (msg.type === \"notify\") setStatus(msg.text || \"Ready\");\n};"
        }
      ]
    },
    {
      "name": "tsconfig.json",
      "type": "file",
      "content": "{\n  \"compilerOptions\": {\n    \"target\": \"es2019\",\n    \"module\": \"commonjs\",\n    \"strict\": true,\n    \"skipLibCheck\": true,\n    \"lib\": [\"es2020\", \"dom\"],\n    \"types\": [\"@figma/plugin-typings\"]\n  },\n  \"include\": [\"src/**/*\"],\n\n  \"moduleResolution\": \"node\",\n  \"resolveJsonModule\": true\n}\n"
    }
  ]
}